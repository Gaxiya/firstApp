{"ast":null,"code":"// import { createReducer,createAction } from '@reduxjs/toolkit';\n// const followType='Follow/Unfollow'\n// const createAnotherUsers='Create/AnotherUsers'\n// export const userFollowUnfollowAction= createAction(followType, (id) =>{\n//     return {\n//       payload: {id}\n//     }\n//   })\n// export const createAnotherUsersAction= createAction(createAnotherUsers)\n// let initialState=[\n//     {id:1,name:'Dima',  status:'I\\'m boss',followed:true,location:{city:'Minsk',country:'Belarus'},      ava:'../images/zeroAva.png'},\n//     {id:2,name:'Sasha',  status:'I\\'m boss too',followed:true,location:{city:'Kiev',country:'Ukraine'},  ava:'../images/zeroAva.png'},\n//     {id:3,name:'Sveta',  status:'I\\'m boss too',followed:true,location:{city:'Moscow',country:'Russia'}, ava:'../images/zeroAva.png'},\n//     {id:4,name:'Andrey', status:'I\\'m boss too',followed:true,location:{city:'Minsk',country:'Belarus'}, ava:'../images/zeroAva.png'},\n// ]\n// const usersReducer = createReducer(initialState,(builder)=>{\n//         builder\n//         .addCase(userFollowUnfollowAction,(state,action)=>{\n//             state.forEach((element)=>{element.id==action.payload.id?element.followed=!element.followed:''})\n//             return state\n//         })\n//         .addCase(createAnotherUsersAction,(state,action)=>{\n//             for(let i=1;i<4;i++){\n//                 let anotherUsers={id:i+state[state.length-1].id,name:'AnotherUser',  status:'I\\'m another user ',followed:true,location:{city:'Kiev',country:'Ukraine'},  ava:'../images/zeroAva.png'}\n//                 state.push(anotherUsers) }\n//                 return state;\n//         })\n//         .addDefaultCase((state, action) => {return state})\n//     }\n// ) \n// export default usersReducer;","map":{"version":3,"names":[],"sources":["D:/projects/js/firstApp/my-app/src/Redux/usersReducers.js"],"sourcesContent":["// import { createReducer,createAction } from '@reduxjs/toolkit';\n\n// const followType='Follow/Unfollow'\n// const createAnotherUsers='Create/AnotherUsers'\n// export const userFollowUnfollowAction= createAction(followType, (id) =>{\n//     return {\n//       payload: {id}\n//     }\n//   })\n// export const createAnotherUsersAction= createAction(createAnotherUsers)\n// let initialState=[\n//     {id:1,name:'Dima',  status:'I\\'m boss',followed:true,location:{city:'Minsk',country:'Belarus'},      ava:'../images/zeroAva.png'},\n//     {id:2,name:'Sasha',  status:'I\\'m boss too',followed:true,location:{city:'Kiev',country:'Ukraine'},  ava:'../images/zeroAva.png'},\n//     {id:3,name:'Sveta',  status:'I\\'m boss too',followed:true,location:{city:'Moscow',country:'Russia'}, ava:'../images/zeroAva.png'},\n//     {id:4,name:'Andrey', status:'I\\'m boss too',followed:true,location:{city:'Minsk',country:'Belarus'}, ava:'../images/zeroAva.png'},\n// ]\n// const usersReducer = createReducer(initialState,(builder)=>{\n//         builder\n//         .addCase(userFollowUnfollowAction,(state,action)=>{\n//             state.forEach((element)=>{element.id==action.payload.id?element.followed=!element.followed:''})\n//             return state\n//         })\n//         .addCase(createAnotherUsersAction,(state,action)=>{\n            \n//             for(let i=1;i<4;i++){\n//                 let anotherUsers={id:i+state[state.length-1].id,name:'AnotherUser',  status:'I\\'m another user ',followed:true,location:{city:'Kiev',country:'Ukraine'},  ava:'../images/zeroAva.png'}\n//                 state.push(anotherUsers) }\n//                 return state;\n//         })\n//         .addDefaultCase((state, action) => {return state})\n//     }\n// ) \n// export default usersReducer;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}